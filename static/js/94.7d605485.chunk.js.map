{"version":3,"file":"static/js/94.7d605485.chunk.js","mappings":"wMAGaA,EAAYC,EAAAA,GAAAA,IAAH,2GAMTC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6F,SC0CvB,EA/CqB,SAAC,GAAkB,IAAD,EAAfG,EAAe,EAAfA,SAKhBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAS,UAACF,EAAaG,IAAI,iBAAlB,QAA+B,IAAIC,cAE5CC,EAAmBT,EAASU,QAAO,SAAAC,GAAE,OACzCA,EAAGC,KAAKJ,cAAcK,SAASP,EADU,IAW3C,OACE,iCACE,kBACEQ,KAAK,OACLC,MAAOT,EACPU,SAZoB,SAAAC,GACC,KAArBA,EAAIC,OAAOH,OAAcV,EAAgB,CAAC,GAC9CA,EAAgB,CAAEC,OAAQW,EAAIC,OAAOH,OACtC,KAWG,mBAAQI,QAAS,kBAAMd,EAAgB,CAAEC,OAAQ,UAAhC,EAAjB,SAA8D,mBAI9D,wBAAI,oBACJ,SAACV,EAAD,UACGa,EAAiBW,KAAI,SAAAC,GAAO,OAC3B,SAACvB,EAAD,CAEEwB,GAAE,UAAKD,EAAQE,IACfC,MAAO,CAAEC,KAAMxB,GAHjB,UAKE,uBAAIoB,EAAQT,QAJPS,EAAQE,GAFY,QAYpC,EC/CKvB,EAAW,CACf,CAAEuB,GAAI,IAAKX,KAAM,SAAUc,MAAO,OAClC,CAAEH,GAAI,IAAKX,KAAM,UAAWc,MAAO,SACnC,CAAEH,GAAI,IAAKX,KAAM,SAAUc,MAAO,QAClC,CAAEH,GAAI,IAAKX,KAAM,YAAac,MAAO,SACrC,CAAEH,GAAI,IAAKX,KAAM,OAAQc,MAAO,SAChC,CAAEH,GAAI,IAAKX,KAAM,QAASc,MAAO,SACjC,CAAEH,GAAI,IAAKX,KAAM,aAAcc,MAAO,SACtC,CAAEH,GAAI,IAAKX,KAAM,aAAcc,MAAO,UAWxC,EARiB,WAKf,OAAO,SAAC,EAAD,CAAc1B,SAAUA,GAChC,C","sources":["components/Router/componentsRouter/ProductsList/ProductsListStyled.jsx","components/Router/componentsRouter/ProductsList/ProductsList.jsx","components/Router/componentsRouter/Products/Products.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  padding: 0 7px;\n  border: 1px solid gray;\n  border-radius: 3px;\n`;\n","// import { Link } from 'react-router-dom';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Container, LinkStyled } from './ProductsListStyled';\n\nconst ProductsList = ({ products }) => {\n  // useEffect(() => {\n  //   // HTTP запрос реализуется здесь\n  // }, [])\n\n  const location = useLocation(); // возвращает объект местоположения\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = (searchParams.get('params') ?? '').toLowerCase(); // читает строку запроса\n  // const normalizeParams = params.toLowerCase();\n  const filteredProducts = products.filter(el =>\n    el.name.toLowerCase().includes(params)\n  );\n\n  const updateQueryString = evt => {\n    if (evt.target.value === '') setSearchParams({});\n    setSearchParams({ params: evt.target.value });\n  };\n\n  // console.log('location ProductList :>> ', location);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={params}\n        onChange={updateQueryString} // перезаписывает строку запроса\n      />\n      <button onClick={() => setSearchParams({ params: 'basket' })}>\n        change Search\n      </button>\n\n      <h3>Products List:</h3>\n      <Container>\n        {filteredProducts.map(product => (\n          <LinkStyled\n            key={product.id}\n            to={`${product.id}`}\n            state={{ from: location }} // передаем объект местоположения\n          >\n            <p>{product.name}</p>\n          </LinkStyled>\n        ))}\n      </Container>\n    </>\n  );\n};\n\nexport default ProductsList;\n","import ProductsList from '../ProductsList/ProductsList';\n\nconst products = [\n  { id: '1', name: 'Banana', color: 'red' },\n  { id: '2', name: 'Apricot', color: 'black' },\n  { id: '3', name: 'Cherry', color: 'blue' },\n  { id: '4', name: 'Pineapple', color: 'white' },\n  { id: '5', name: 'Pear', color: 'black' },\n  { id: '6', name: 'Mango', color: 'green' },\n  { id: '7', name: 'Strawberry', color: 'green' },\n  { id: '8', name: 'Watermelon', color: 'green' },\n];\n\nconst Products = () => {\n  // useEffect(() => {\n  //   // HTTP запрос реализуется здесь\n  // }, [])\n\n  return <ProductsList products={products} />;\n};\n\nexport default Products;\n"],"names":["Container","styled","LinkStyled","Link","products","location","useLocation","useSearchParams","searchParams","setSearchParams","params","get","toLowerCase","filteredProducts","filter","el","name","includes","type","value","onChange","evt","target","onClick","map","product","to","id","state","from","color"],"sourceRoot":""}