{"version":3,"file":"static/js/860.edb894d1.chunk.js","mappings":"gJAgDA,UA7CuB,WAAO,IAAD,IACrBA,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,MAAfD,WACFE,GAAsBC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,aAU3D,OACE,iCACE,0BAAI,mBAAiBL,MAErB,SAAC,KAAD,CAAMM,GAAIJ,EAAoBK,QAA9B,SAAuC,sBAEvC,uBAAG,oBAEH,uBAAG,iYASH,2BACE,yBACE,SAAC,KAAD,CAAMD,GAAG,cAAT,SAAuB,2BAEzB,yBACE,SAAC,KAAD,CAAMA,GAAG,WAAT,SAAoB,yBAGxB,SAAC,EAAAE,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["components/Router/pages/ProductDetails.jsx"],"sourcesContent":["import { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst ProductDetails = () => {\n  const location = useLocation(); // сюда прилетает местоположение (location) страницы ProductsList в state текущего location, далее мы передаем это в <Link to={location.state.from}>Back to Products</Link> (см.ниже)\n  const { productsId } = useParams(); // useParams() возвращает объект со всеми динамическими параметрами которые есть в текущем URL\n  const backLinkLocationRef = useRef(location.state?.from ?? '/products'); // тк useRef запиисывает в себя инфу только на стадии монтирования, запишем сюда локацию для линка возврата на предыдущую страницу\n  // const params = useParams();\n  // console.log('params :>> ', params);\n\n  // useEffect(() => {\n  //   // HTTP запрос реализуется здесь\n  // }, [])\n\n  // console.log('location ProductDetails :>> ', location);\n\n  return (\n    <>\n      <h2>Product details {productsId}</h2>\n\n      <Link to={backLinkLocationRef.current}>Back to Products</Link>\n      {/* <Link to={location.state?.from ?? '/products'}>Back to Products</Link> */}\n      <p>any image here</p>\n      {/* <img src=\"https://via.placeholder.com/960x240\" alt=\"\" /> */}\n      <p>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Doloribus sunt\n        excepturi nesciunt iusto dignissimos assumenda ab quae cupiditate a, sed\n        reprehenderit? Deleniti optio quasi, amet natus reiciendis atque fuga\n        dolore? Lorem, ipsum dolor sit amet consectetur adipisicing elit.\n        Impedit suscipit quisquam incidunt commodi fugiat aliquam praesentium\n        ipsum quos unde voluptatum?\n      </p>\n\n      <ul>\n        <li>\n          <Link to=\"description\">Product description</Link>\n        </li>\n        <li>\n          <Link to=\"delivery\">Delivery terms</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ProductDetails;\n\n/*\nКак это читать: \n\n<Link to={location.state?.from ?? '/products'}>Back to Products</Link>\n\nЕсли location.state - true, тогда показывай значение location.state.from, если fasle - тогда\nпокажи '/products'\n\nlocation.state?.from -- если location.state будет false, тогда вернется undefined\n*/\n\n/*\n<Link to={location.state?.from ?? '/products'}>Back to Products</Link> \nЭта проверка нужна для того, если пользователь перейдет на новую страницу по линку находясь\nна странице ProductDedails, при нажатии на кнопку \"Back to Products\" он вернулся по ссылке \n\"/products\", в противном случае слетит вся страница.\n*/\n\n/*\nОборачиваем в Suspense для разделения кода.\n<Suspense fallback={<div>Loading...</div>}>\n  <Outlet />\n</Suspense>\n*/\n"],"names":["location","useLocation","productsId","useParams","backLinkLocationRef","useRef","state","from","to","current","Suspense","fallback"],"sourceRoot":""}